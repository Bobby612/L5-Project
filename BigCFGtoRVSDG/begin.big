###
# Author: Borislav Kratchanov, b.k.kratchanov@gmail.com
# Copying: Check License file in top level of GitHub repository for information on redistribution and use
###

begin brs 
    init cfg;
    rules = [   
                ## Aliasing rules ##
                (aliasing_connect),
                (aliasing_finish),

                ## ## ## ## ## ## ## ## ## ##
                ## Create the control tree ##
                ## ## ## ## ## ## ## ## ## ##
                (ct_deabstractify(0), ct_deabstractify(1), ct_deabstractify(2)), 
                (ct_continuous, ct_if_then_else, 
                ct_if_then(1,2), ct_if_then(2,1),
                ct_selfloop(1,2), ct_selfloop(2,1),
                ct_while_loop(1,2), ct_while_loop(2,1)),
                {ct_top_node}, ## Make sure one CT is completed before starting another
                {ct_begin},

                ## ## ## ## ## ## ## ## ##
                ## Create RVSDG from CT ##
                ## ## ## ## ## ## ## ## ##

                ## New Node Fix Rules ##
                # Remove duplicated dependencies #
                (rg_deduplicate_read, rg_deduplicate_write),

                # Disconnect Read and Write Dedges from Import and Export #
                (rg_disconnect_dedge_read, rg_disconnect_dedge_write),

                # Connect new Node to the its parent region #
                (rg_connect_node_read_to_export), 
                (rg_connect_write_to_export), 
                (rg_connect_read_to_import), 
                (rg_add_write_to_export, rg_add_read_to_import), 

                # Reconnect the loc nodes in the correct fashion #
                (rg_disconnect_loc_new_th_iter_r,
                rg_disconnect_loc_new_th_iter_e,
                rg_disconnect_loc_new_th_iter_i,
                rg_disconnect_loc_new_th_iter_w,
                rg_disconnect_loc_new_g_iter_r,
                rg_disconnect_loc_new_g_iter_e,
                rg_disconnect_loc_new_g_iter_i,
                rg_disconnect_loc_new_g_iter_w),
                (rg_disconnect_loc_new_node_fin),
                (rg_disconnect_loc_new_th_start_import, rg_disconnect_loc_new_g_start_import),
                (rg_disconnect_loc_new_th_start_export, rg_disconnect_loc_new_g_start_export),

                # Connect the new Node's conditional #
                (rg_gamma_connect_conditional),
                (rg_self_loop_connect_conditional),

                {rg_finish_node},

                ## Continuous blocks fix rules ##
                (rg_continuous_connect_export_1_to_import_2_remove_export_1),
                (rg_continuous_connect_export_1_to_import_2),
                (rg_continuous_connect_import_1_to_import_2,
                rg_continuous_remove_export_1),
                {rg_continuous_finish_block},

                ## CT Node begin transformation ##
                {rg_if_then_else, rg_continuous, rg_self_loop, rg_if_then},

                ## RVSDG finish top-level CT Region ##
                (rg_lone_region_imports, rg_lone_region_exports),
                {rg_lone_region_void, rg_lone_region_return}

                  ];
end